//
// Copyright 2013 (C). Alex Robenko. All rights reserved.
//

// This file is free software: you can redistribute it and/or modify
// it under the terms of the GNU General Public License as published by
// the Free Software Foundation, either version 3 of the License, or
// (at your option) any later version.
//
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.
//
// You should have received a copy of the GNU General Public License
// along with this program.  If not, see <http://www.gnu.org/licenses/>.

#include "embxx/util/IntegralPromotion.h"
#include "cxxtest/TestSuite.h"

class IntegralPromotionTestSuite : public CxxTest::TestSuite
{
public:
    void test1();
    void test2();
};

void IntegralPromotionTestSuite::test1()
{
    static_assert(
        std::is_same<embxx::util::IntegralPromotion<std::uint8_t>::Type, std::uint16_t>::value,
        "Promotion didn't work");

    static_assert(
        std::is_same<embxx::util::IntegralPromotion<std::uint16_t>::Type, std::uint32_t>::value,
        "Promotion didn't work");

    static_assert(
        std::is_same<embxx::util::IntegralPromotion<std::uint32_t>::Type, std::uint64_t>::value,
        "Promotion didn't work");

    static_assert(
        std::is_same<embxx::util::IntegralPromotion<std::uint64_t>::Type, std::uint64_t>::value,
        "Promotion didn't work");

}

void IntegralPromotionTestSuite::test2()
{
    static_assert(
        std::is_same<embxx::util::IntegralPromotion<std::int8_t>::Type, std::int16_t>::value,
        "Promotion didn't work");

    static_assert(
        std::is_same<embxx::util::IntegralPromotion<std::int16_t>::Type, std::int32_t>::value,
        "Promotion didn't work");

    static_assert(
        std::is_same<embxx::util::IntegralPromotion<std::int32_t>::Type, std::int64_t>::value,
        "Promotion didn't work");

    static_assert(
        std::is_same<embxx::util::IntegralPromotion<std::int64_t>::Type, std::int64_t>::value,
        "Promotion didn't work");

}



